{"version":3,"sources":["index.scss","../node_modules/@material/layout-grid/mdc-layout-grid.scss","../node_modules/@material/layout-grid/_mixins.scss","App.scss","Initialize.scss"],"names":[],"mappings":"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","file":"main.2581b9c9.chunk.css","sourcesContent":["html, body {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n#root {\n  height: 100%;\n  min-height: 100%;\n}\n\n.fill-height {\n  height: 100%;\n  min-height: 100%;\n}\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use \"sass:list\";\n@use \"sass:map\";\n@use \"./variables\";\n@use \"./mixins\";\n\n:root {\n  @each $size in map.keys(variables.$columns) {\n    --mdc-layout-grid-margin-#{$size}: #{map.get(\n        variables.$default-margin,\n        $size\n      )};\n    --mdc-layout-grid-gutter-#{$size}: #{map.get(\n        variables.$default-gutter,\n        $size\n      )};\n    --mdc-layout-grid-column-width-#{$size}: #{map.get(\n        variables.$column-width,\n        $size\n      )};\n  }\n}\n\n// postcss-bem-linter: define layout-grid\n.mdc-layout-grid {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n\n      @include mixins.layout-grid($size, $margin, variables.$max-width);\n    }\n  }\n}\n\n.mdc-layout-grid__inner {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n      $gutter: map.get(variables.$default-gutter, $size);\n\n      @include mixins.inner($size, $margin, $gutter);\n    }\n  }\n}\n\n.mdc-layout-grid__cell {\n  // select the upper breakpoint\n  $upper-breakpoint: list.nth(map.keys(variables.$columns), 1);\n\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $gutter: map.get(variables.$default-gutter, $size);\n\n      @include mixins.cell($size, variables.$default-column-span, $gutter);\n\n      @for $span from 1 through map.get(variables.$columns, $upper-breakpoint) {\n        // Span classes.\n        // stylelint-disable max-nesting-depth\n        @at-root .mdc-layout-grid__cell--span-#{$span},\n          .mdc-layout-grid__cell--span-#{$span}-#{$size} {\n          @include mixins.cell-span_($size, $span, $gutter);\n        }\n        // stylelint-enable max-nesting-depth\n      }\n    }\n  }\n\n  // Order override classes.\n  @for $i from 1 through map.get(variables.$columns, $upper-breakpoint) {\n    &--order-#{$i} {\n      @include mixins.cell-order($i);\n    }\n  }\n\n  // Alignment classes.\n  &--align-top {\n    @include mixins.cell-align(top);\n  }\n\n  &--align-middle {\n    @include mixins.cell-align(middle);\n  }\n\n  &--align-bottom {\n    @include mixins.cell-align(bottom);\n  }\n}\n\n.mdc-layout-grid--fixed-column-width {\n  @each $size in map.keys(variables.$columns) {\n    @include mixins.media-query_($size) {\n      $margin: map.get(variables.$default-margin, $size);\n      $gutter: map.get(variables.$default-gutter, $size);\n      $column-width: map.get(variables.$column-width, $size);\n\n      @include mixins.fixed-column-width(\n        $size,\n        $margin,\n        $gutter,\n        $column-width\n      );\n    }\n  }\n}\n\n.mdc-layout-grid--align-left {\n  margin-right: auto;\n  margin-left: 0;\n}\n\n.mdc-layout-grid--align-right {\n  margin-right: 0;\n  margin-left: auto;\n}\n// postcss-bem-linter: end\n","// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use \"sass:list\";\n@use \"sass:map\";\n@use \"sass:math\";\n@use \"./variables\";\n\n// returns the lower grid boundary or null if the smallest grid is selected\n@function breakpoint-min($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $min: map.get(variables.$breakpoints, $size);\n\n  @return if($min > 0, $min, null);\n}\n\n// returns the upper grid boundary or null if the largest grid is selected\n@function breakpoint-max($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n  $names: map.keys(variables.$columns);\n  $n: list.index($names, $size);\n  $prev: if($n > 1, list.nth($names, $n - 1), null);\n\n  @return if($prev, (breakpoint-min($prev) - 1px), null);\n}\n\n// Private mixins, meant for internal use.\n@mixin media-query_($size) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $min: breakpoint-min($size);\n  $max: breakpoint-max($size);\n\n  @if $min == null and $max != null {\n    // Phone\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max != null {\n    // Tablet\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    // Desktop\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    // Fallback - no breakpoints defined\n    @content;\n  }\n}\n\n@mixin cell-span_($size, $span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $percent: math.percentage($span / map.get(variables.$columns, $size));\n\n  @if $percent > 100% {\n    $percent: 100%;\n  }\n\n  width: calc(#{$percent} - #{$gutter});\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(#{$percent} - var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}));\n\n  @supports (display: grid) {\n    width: auto;\n    grid-column-end: span math.min($span, map.get(variables.$columns, $size));\n  }\n}\n\n// Public mixins, meant for developer usage.\n@mixin layout-grid($size, $margin, $max-width: null) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  box-sizing: border-box;\n  margin: 0 auto;\n  padding: $margin;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  padding: var(--mdc-layout-grid-margin-#{$size}, #{$margin});\n\n  @if $max-width {\n    max-width: $max-width;\n  }\n}\n\n@mixin inner($size, $margin, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: -$gutter / 2;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2 * -1);\n\n  @supports (display: grid) {\n    display: grid;\n    margin: 0;\n    grid-gap: $gutter;\n    // stylelint-disable-next-line declaration-block-no-duplicate-properties\n    grid-gap: var(--mdc-layout-grid-gutter-#{$size}, $gutter);\n    grid-template-columns: repeat(\n      map.get(variables.$columns, $size),\n      minmax(0, 1fr)\n    );\n  }\n}\n\n@mixin cell($size, $default-span, $gutter) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  @include cell-span_($size, $default-span, $gutter);\n\n  box-sizing: border-box;\n  margin: $gutter / 2;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  margin: calc(var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) / 2);\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n}\n\n@mixin cell-order($order) {\n  order: $order;\n}\n\n@mixin cell-align($position) {\n  @if $position == 'top' {\n    align-self: flex-start;\n\n    @supports (display: grid) {\n      align-self: start;\n    }\n  }\n\n  @if $position == 'middle' {\n    align-self: center;\n  }\n\n  @if $position == 'bottom' {\n    align-self: flex-end;\n\n    @supports (display: grid) {\n      align-self: end;\n    }\n  }\n\n  @if $position == 'stretch' {\n    align-self: stretch;\n  }\n}\n\n@mixin fixed-column-width($size, $margin, $gutter, $column-width) {\n  @if not map.has-key(variables.$columns, $size) {\n    @error \"Invalid style specified! Choose one of #{map.keys(variables.$columns)}\";\n  }\n\n  $columnCount: map.get(variables.$columns, $size);\n  $gutter-number: $columnCount - 1;\n  $margin-number: 2;\n\n  width: $column-width * $columnCount + $gutter * $gutter-number + $margin *\n    $margin-number;\n  // stylelint-disable-next-line declaration-block-no-duplicate-properties\n  width: calc(\n    var(--mdc-layout-grid-column-width-#{$size}, #{$column-width}) * #{$columnCount} +\n      var(--mdc-layout-grid-gutter-#{$size}, #{$gutter}) * #{$gutter-number} +\n      var(--mdc-layout-grid-margin-#{$size}, #{$margin}) * #{$margin-number}\n  );\n}\n","@import \"~@material/top-app-bar/dist/mdc.top-app-bar.css\";\n@import \"~@material/drawer/dist/mdc.drawer.css\";\n@import \"~@material/list/dist/mdc.list.css\";\n@import \"~@material/menu-surface/dist/mdc.menu-surface.css\";\n@import \"~@material/menu/dist/mdc.menu.css\";\n@import \"@material/layout-grid/mdc-layout-grid\";\n\n.mdc-layout-grid {\n  padding: 0;\n}\n\n.mdc-top-app-bar .mdc-menu-surface--open {\n  right: 0;\n}\n\n#canvas {\n  display: block;\n  background-color: black;\n  width: 100%;\n  height: 100%;\n}",".App {\n  text-align: center;\n}\n\n.App-logo {\n  animation: App-logo-spin infinite 20s linear;\n  height: 40vmin;\n  pointer-events: none;\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n"]}